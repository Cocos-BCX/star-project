{"version":3,"sources":["Game.js"],"names":["bcxAdapter","require","cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","accountDisplay","balanceDisplay","scoreAudio","AudioClip","onLoad","groundY","y","height","timer","starDuration","spawnNewStar","score","account_name","self","initSDK","res","console","log","login","string","getBalanceByAccount","data","COCOS","newStar","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","game","Math","random","randX","randY","jumpHeight","maxX","width","v2","update","dt","gameOver","enabled","gainScore","audioEngine","playEffect","stopAllActions","director","loadScene","sendWinCocos"],"mappings":"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","file":"Game.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["var bcxAdapter = require(\"bcxAdapter\");\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        starPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        maxStarDuration: 0,\n        minStarDuration: 0,\n        ground: {\n            default: null,\n            type: cc.Node\n        },\n        player: {\n            default: null,\n            type: cc.Node\n        },\n        scoreDisplay: {\n            default: null,\n            type: cc.Label\n        },\n        accountDisplay: {\n            default: null,\n            type: cc.Label\n        },\n        balanceDisplay: {\n            default: null,\n            type: cc.Label\n        },\n        scoreAudio: {\n            default: null,\n            type: cc.AudioClip\n        }\n    },\n\n    onLoad: function () {\n        this.groundY = this.ground.y + this.ground.height/2;\n        this.timer = 0;\n        this.starDuration = 0;\n        this.spawnNewStar();\n        this.score = 0;\n        this.account_name = '';\n        self = this;\n        if(bcxAdapter){\n            bcxAdapter.initSDK(function(res){\n                console.log(\"initSDK\",res)\n              if(res){\n                bcxAdapter.login(function(res){\n                    console.log(\"login\",res)\n                    self.accountDisplay.string = res.account_name;\n                    self.account_name = res.account_name;\n                    bcxAdapter.getBalanceByAccount(res.account_name,function(res){\n                        console.log(\"getBalanceByAccount\",res)\n                        self.balanceDisplay.string = res.data.COCOS;\n                    }) \n                })\n              }\n            })\n        }\n    },\n\n    spawnNewStar: function() {\n        var newStar = cc.instantiate(this.starPrefab);\n        this.node.addChild(newStar);\n        newStar.setPosition(this.getNewStarPosition());\n        newStar.getComponent('Star').game = this;\n        this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\n        this.timer = 0;\n    },\n\n    getNewStarPosition: function () {\n        var randX = 0;\n        var randY = this.groundY + Math.random() * this.player.getComponent('Player').jumpHeight + 50;\n        var maxX = this.node.width/2;\n        randX = (Math.random() - 0.5) * 2 * maxX;\n        return cc.v2(randX, randY);\n    },\n\n    update: function (dt) {\n\n        if (this.timer > this.starDuration) {\n            this.gameOver();\n            this.enabled = false;   // disable gameOver logic to avoid load scene repeatedly\n            return;\n        }\n        this.timer += dt;\n    },\n\n    gainScore: function () {\n        this.score += 1;\n        this.scoreDisplay.string = 'Score: ' + this.score;\n        cc.audioEngine.playEffect(this.scoreAudio, false);\n    },\n\n    gameOver: function () {\n        this.player.stopAllActions(); //停止 player 节点的跳跃动作\n        cc.director.loadScene('gameover');\n        console.log(\"account_name\",this.account_name)\n        if(this.score>0){\n            if(this.account_name == 'test1'){\n                console.log(\"you are contract account, can not transfer to self\")\n                return;\n            }\n            bcxAdapter.sendWinCocos(this.account_name,this.score,function(res){\n                console.log(\"sendWinCocos\",res)\n            })\n        }\n    }\n});\n"]}